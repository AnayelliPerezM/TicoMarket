@model IEnumerable<ticomarkenet.Models.Usuario>

@{
    ViewData["Title"] = "Gestión de Usuarios";
}

<div class="container py-4">

    @if (TempData["Mensaje"] != null)
    {
        <div class="alert alert-success">@TempData["Mensaje"]</div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">@TempData["Error"]</div>
    }



    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2><i class="fas fa-users me-2"></i>Gestión de Usuarios</h2>
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#usuarioModal" onclick="abrirModalCreacion()">
            <i class="fas fa-user-plus me-1"></i> Agregar Usuario
        </button>
    </div>

    <div id="usuarios-react"></div>
</div>

<!-- Modal de Crear/Editar -->
<div class="modal fade" id="usuarioModal" tabindex="-1" aria-labelledby="usuarioModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <form id="formUsuario" action="/Usuarios/Guardar" method="post">
        @* <form id="formUsuario" asp-action="Guardar" method="post"> *@
            @Html.AntiForgeryToken()
            <div class="modal-content">
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title" id="usuarioModalLabel">Nuevo Usuario</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div id="formError" class="text-danger mb-2"></div>
                    <input type="hidden" id="UsuarioId" name="UsuarioId" />
                 

                    <div class="mb-2">
                        <label>Nombre</label>
                      
                        <input type="text" class="form-control" id="Nombre" name="Nombre" required />
                    </div>
                    <div class="mb-2">
                        <label>Correo</label>
                        
                        <input type="email" class="form-control" id="Correo" name="Correo" required />
                    </div>
                    <div class="mb-2">
                        <label>Password</label>
                      
                        <input type="password" class="form-control" id="Password" name="Password" required />
                    </div>
                    <div class="mb-2">
                        <label>Teléfono</label>
                       
                        <input type="text" class="form-control" id="Telefono" name="Telefono" />
                    </div>
                    <div class="mb-2">
                        <label>Dirección</label>
                       
                        <input type="text" class="form-control" id="Direccion" name="Direccion" />
                    </div>
                    <div class="mb-2">
                        <label>Rol</label>
                        
                            <select class="form-control" id="Rol" name="Rol">
                            <option value="">Seleccione un rol</option>
                            <option value="VEN">VENDEDOR</option>
                            <option value="ADMIN">ADMIN</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-success">Guardar</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                </div>
            </div>
        </form>
    </div>
</div>



<!-- Modal de Confirmación de Eliminación -->
<div class="modal fade" id="confirmarEliminacionModal" tabindex="-1" aria-labelledby="confirmarEliminacionLabel" aria-hidden="true">
    <div class="modal-dialog">
        <form id="formEliminarUsuario" method="post">
            @Html.AntiForgeryToken()
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title" id="confirmarEliminacionLabel">Confirmar Eliminación</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <p id="mensajeEliminarUsuario">¿Estás seguro de que deseas eliminar este usuario?</p>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-danger">Sí, eliminar</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                </div>
            </div>
        </form>
    </div>
</div>








@section Scripts {
    <script src="https://unpkg.com/react@18/umd/react.development.js" crossorigin></script>
    <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js" crossorigin></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>

    <script>
        const usuarios = @Html.Raw(Json.Serialize(Model));

        function abrirModalCreacion() {
        const form = document.getElementById("formUsuario");
        form.action = "/Usuarios/Guardar";
        form.reset();
        document.getElementById("UsuarioId").value = 0;
        document.getElementById("usuarioModalLabel").innerText = "Nuevo Usuario";
        }

        function abrirModalEdicion(usuario) {
            const form = document.getElementById("formUsuario");
            form.action = `/Usuarios/Edit/${usuario.usuarioId}`;
            document.getElementById("UsuarioId").value = usuario.usuarioId;
            form.Nombre.value = usuario.nombre;
            form.Correo.value = usuario.correo;
            form.Password.value = usuario.password;
            form.Telefono.value = usuario.telefono;
            form.Direccion.value = usuario.direccion;
            form.Rol.value = usuario.rol;
            document.getElementById("usuarioModalLabel").innerText = "Editar Usuario";
            new bootstrap.Modal(document.getElementById("usuarioModal")).show();
        }

        //---------------------------------------
            function abrirModalEliminar(usuario) {
            const form = document.getElementById("formEliminarUsuario");
            form.action = `/Usuarios/Delete/${usuario.usuarioId}`;
            document.getElementById("mensajeEliminarUsuario").innerText =
                `¿Estás seguro de que deseas eliminar al usuario "${usuario.nombre}"?`;
            new bootstrap.Modal(document.getElementById("confirmarEliminacionModal")).show();
        }

        //---------------------------------------

    </script>



    <script type="text/babel">
        function TablaUsuarios({ data }) {
            return (
                <div className="card shadow">
                    <div className="card-header bg-dark text-white">
                        Lista de Usuarios
                    </div>
                    <div className="card-body table-responsive">
                        <table className="table table-bordered table-hover">
                            <thead className="table-primary">
                                <tr>

                                    <th>Nombre</th>
                                    <th>Correo</th>
                                    <th>Teléfono</th>
                                    <th>Rol</th>
                                    <th>Dirección</th>
                                    <th>Acciones</th>
                                </tr>
                            </thead>
                            <tbody>
                                {data.map(usuario => (
                                    <tr key={usuario.usuarioId}>

                                        <td>{usuario.nombre}</td>
                                        <td>{usuario.correo}</td>
                                        <td>{usuario.telefono}</td>
                                        <td>{usuario.rol}</td>
                                        <td>{usuario.direccion}</td>
                                        <td>
                                            <button
                                                className="btn btn-sm btn-warning me-1"
                                                onClick={() => abrirModalEdicion(usuario)}>
                                                <i className="fas fa-edit"></i>
                                            </button>
                                            <form
                                                method="post"
                                                action={`/Usuarios/Delete/${usuario.usuarioId}`}
                                                style={{ display: "inline" }}>
                                                @Html.AntiForgeryToken()
                                                <button
                                                    type="button"
                                                    className="btn btn-sm btn-danger"
                                                     onClick={() => abrirModalEliminar(usuario)}>
                                                    <i className="fas fa-trash"></i>
                                                </button>
                                            </form>
                                        </td>
                                    </tr>
                                ))}
                            </tbody>
                        </table>
                    </div>
                </div>
            );
        }

        const root = ReactDOM.createRoot(document.getElementById("usuarios-react"));
        root.render(<TablaUsuarios data={usuarios} />);
    </script>
}


